<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>toString 方法</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>JScript&nbsp;</TD>
<TD class="bannerright" nowrap><a href="../html-vss/jsTOC.htm">语言参考</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="jsmthtostring"></A>toString 方法</H1>

<P>返回对象的字符串表示。</P>

<P><CODE>objectname.<B>toString(</B>[radix]<B>)</B></CODE></P>

<H4>参数</H4>

<P class=dt>objectname</P>

<P class=indent>必选项。要得到字符串表示的对象。</P>

<P class=dt>radix</P>

<P class=indent>可选项。指定将数字值转换为字符串时的进制。</P>

<H4>说明</H4>

<P><B>toString</B> 方法是所有内建的 JScript 对象的成员。它的操作依赖于对象的类型：</P>

<TABLE border=1 cellspacing=0 cols=2 frame=box rules=all>

<TR VALIGN="top">
<TH width=13%>对象</TH>
<TH width=87%>操作</TH>
</TR>

<TR VALIGN="top">
<TD width=13%>Array</TD>
<TD width=87%>将 <B>Array</B> 的元素转换为字符串。结果字符串由逗号分隔，且连接起来。</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>Boolean</TD>
<TD width=87%>如果 Boolean 值是 <B>true</B>，则返回 “true”。否则，返回 “false”。</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>Date</TD>
<TD width=87%>返回日期的文字表示法。</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>Error</TD>
<TD width=87%>返回一个包含相关错误消息的字符串。</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>Function</TD>
<TD width=87%>返回如下格式的字符串，其中 <I>functionname</I> 是被调用 <B>toString</B> 方法函数的名称：
<PRE><CODE>function functionname( ) { [native code] }</CODE></PRE>
</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>Number</TD>
<TD width=87%>返回数字的文字表示。</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>String</TD>
<TD width=87%>返回 <B>String</B> 对象的值。</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>默认</TD>
<TD width=87%>返回 “<span class=ce><CODE>[object objectname]</CODE></span>”，其中 <span class=ce><CODE>objectname</CODE></span> 是对象类型的名称。</TD>
</TR>
</TABLE><BR>

<H4>示例</H4>

<P>下面的例子演示了使用带有 radix 参数的 toString 方法。上面所示函数的返回值是一个 Radix 转换表。</P>

<PRE><CODE>function CreateRadixTable (){
   var s, s1, s2, s3, x;                    // </CODE>声明变量。
<CODE>   s = "Hex    Dec   Bin \n";               // </CODE>创建表头。
<CODE>   for (x = 0; x &lt; 16; x++)                 // </CODE>根据所示值的
<CODE>   {                                        // </CODE>数字建立
<CODE>      switch(x)                             // </CODE>表尺寸。
<CODE>      {                                     // </CODE>设置栏目间空间。
<CODE>         case 0 : </CODE>
<CODE>            s1 = "      ";</CODE>
<CODE>            s2 = "    ";</CODE>
<CODE>            s3 = "   ";</CODE>
<CODE>            break;</CODE>
<CODE>         case 1 :</CODE>
<CODE>            s1 = "      ";</CODE>
<CODE>            s2 = "    ";</CODE>
<CODE>            s3 = "   ";</CODE>
<CODE>            break;</CODE>
<CODE>         case 2 :</CODE>
<CODE>            s3 = "  ";</CODE>
<CODE>            break;</CODE>
<CODE>         case 3 : </CODE>
<CODE>            s3 = "  ";</CODE>
<CODE>            break;</CODE>
<CODE>         case 4 : </CODE>
<CODE>            s3 = " ";</CODE>
<CODE>            break;</CODE>
<CODE>         case 5 :</CODE>
<CODE>            s3 = " ";</CODE>
<CODE>            break;</CODE>
<CODE>         case 6 : </CODE>
<CODE>            s3 = " ";</CODE>
<CODE>            break;</CODE>
<CODE>         case 7 : </CODE>
<CODE>            s3 = " ";</CODE>
<CODE>            break;</CODE>
<CODE>         case 8 :</CODE>
<CODE>            s3 = "" ;</CODE>
<CODE>            break;</CODE>
<CODE>         case 9 :</CODE>
<CODE>            s3 = "";</CODE>
<CODE>            break;</CODE>
<CODE>         default: </CODE>
<CODE>            s1 = "     ";</CODE>
<CODE>            s2 = "";</CODE>
<CODE>            s3 = "    ";</CODE>
<CODE>      }                                     // </CODE>转换为十六进制、十进制、二进制。
<CODE>      s += " " + <span class=cfe><B>x.toString(</B></span>16<span class=cfe><B>)</B></span> + s1 + <span class=cfe><B>x.toString(</B></span>10<span class=cfe><B>)</B></span></CODE>
<CODE>      s +=  s2 + s3 + <span class=cfe><B>x.toString(</B></span>2<span class=cfe><B>)</B></span>+ "\n";</CODE>
<CODE>      </CODE>
<CODE>   }</CODE>
<CODE>   return(s);                               // </CODE>返回整个<CODE> radix </CODE>表。
}</PRE>

<H4>要求</H4>

<P><A HREF="jsoriversioninformation.htm">版本 2</A></P>

<H4>请参阅</H4>

<P><A HREF="jsstmfunction.htm">function 语句</A></P>

<P>应用于： <A HREF="jsobjarray.htm">Array 对象</A> | <A HREF="jsobjboolean.htm">Boolean 对象</A> | <A HREF="jsobjdate.htm">Date 对象</A> | <A HREF="jsobjerror.htm">Error 对象</A> | <A HREF="jsobjfunction.htm">Function 对象</A> | <A HREF="jsobjnumber.htm">Number 对象</A> | <A HREF="jsobjobject.htm">Object 对象</A> | <A HREF="jsobjstring.htm">String 对象</A></P>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="jscopy.htm">&copy; 2000 Microsoft Corporation 版权所有。保留所有权利。使用规定。</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
