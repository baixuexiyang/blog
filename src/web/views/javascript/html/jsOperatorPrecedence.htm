<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>运算符优先级</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>JScript&nbsp;</TD>
<TD class="bannerright" nowrap><a href="../html-vss/jsTOC.htm">语言参考</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="jsoperatorprecedence"></A>运算符优先级</H1>

<P>JScript 中的运算符优先级是一套规则。该规则在计算表达式时控制运算符执行的顺序。具有较高优先级的运算符先于较低优先级的运算符执行。例如，乘法的执行先于加法。</P>

<P>下表按从最高到最低的优先级列出 JScript 运算符。具有相同优先级的运算符按从左至右的顺序求值。 </P>

<TABLE border=1 cellspacing=0 cols=2 frame=box rules=all>

<TR VALIGN="top">
<TH width=44%>运算符</TH>
<TH width=56%>描述</TH>
</TR>

<TR VALIGN="top">
<TD width=44%>. [] ()</TD>
<TD width=56%>字段访问、数组下标、函数调用以及表达式分组</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>++ -- - ~ ! delete new typeof void</TD>
<TD width=56%>一元运算符、返回数据类型、对象创建、未定义值</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>* / %</TD>
<TD width=56%>乘法、除法、取模</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>+ - +</TD>
<TD width=56%>加法、减法、字符串连接</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>&lt;&lt; &gt;&gt; &gt;&gt;&gt;</TD>
<TD width=56%>移位</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>&lt; &lt;= &gt; &gt;= instanceof</TD>
<TD width=56%>小于、小于等于、大于、大于等于、instanceof</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>== != === !==</TD>
<TD width=56%>等于、不等于、严格相等、非严格相等</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>&amp;</TD>
<TD width=56%>按位与</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>^</TD>
<TD width=56%>按位异或</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>|</TD>
<TD width=56%>按位或</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>&amp;&amp;</TD>
<TD width=56%>逻辑与</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>||</TD>
<TD width=56%>逻辑或</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>?:</TD>
<TD width=56%>条件</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>= <I>oP</I>=</TD>
<TD width=56%>赋值、运算赋值</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>,</TD>
<TD width=56%>多重求值</TD>
</TR>
</TABLE><BR>

<P>圆括号可用来改变运算符优先级所决定的求值顺序。这意味着圆括号中的表达式应在其用于表达式的其余部分之前全部被求值。 </P>

<P>例如： </P>

<PRE><CODE>z = 78 * (96 + 3 + 45)</CODE></PRE>

<P>在该表达式中有五个运算符： =, *, (), +, 以及另一个 +。根据运算符优先级的规则，它们将按下面的顺序求值： (), +, +, *, =。

<OL type=1>
	<LI>首先对圆括号内的表达式求值。圆括号中有两个加法运算符。因为两个加法运算符具有相同的优先级，从左到右求值。先将 96 和 3 相加，然后将其和与 45 相加，得到的结果为 144。</li>

	<LI>然后是乘法运算。78 乘以 144，得到结果为 11232。</li>
</OL>

<P>A最后是赋值运算。将 11232 赋给 z。</P>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="jscopy.htm">&copy; 2000 Microsoft Corporation 版权所有。保留所有权利。使用规定。</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
