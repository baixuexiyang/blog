<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>RegExp 对象</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>JScript&nbsp;</TD>
<TD class="bannerright" nowrap><a href="../html-vss/jsTOC.htm">语言参考</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="jsobjregexp"></A>RegExp 对象</H1>

<P>保存有关正则表达式模式匹配信息的固有全局对象。</P>

<P><CODE><B>RegExp</B>.<I>property</I></CODE></P>

<P>必选项 <I>property</I> 参数是 <B>RegExp</B> 对象的任意一个属性。 </P>

<H4>说明</H4>

<P><B>RegExp</B> 对象不能直接创建，但始终可以使用。在成功的正则表达式查找完成之前，<B>RegExp</B> 对象各属性的初始值如下所示：</P>

<TABLE border=1 cellspacing=0 cols=3 frame=box rules=all>

<TR VALIGN="top">
<TH width=39%>属性</TH>
<TH width=22%>简写</TH>
<TH width=39%>初始值</TH>
</TR>

<TR VALIGN="top">
<TD width=39%>index</TD>
<TD width=22%>&nbsp;</TD>
<TD width=39%>-1</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>lastIndex</TD>
<TD width=22%>&nbsp;</TD>
<TD width=39%>-1</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>lastMatch </TD>
<TD width=22%>$&amp;</TD>
<TD width=39%>空字符串。</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>lastParen </TD>
<TD width=22%>$+</TD>
<TD width=39%>空字符串。</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>leftContext</TD>
<TD width=22%>&nbsp;</TD>
<TD width=39%>空字符串。</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>rightContext</TD>
<TD width=22%>&nbsp;</TD>
<TD width=39%>空字符串。</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>$1 - $9 </TD>
<TD width=22%>$1 - $9</TD>
<TD width=39%>空字符串。</TD>
</TR>
</TABLE><BR>

<P>在成功的正则表达式查找完成之前，其属性值为 <A HREF="glossary.htm#defundefined">undefined</A>。</P>

<P>不要将全局 <B>RegExp</B> 对象与 <B>正则表达式</B> 对象混淆。尽管听起来像是一回事，但它们是截然不同的。全局 <B>RegExp</B> 对象的属性包含不断更新的关于每个匹配出现的信息，而<B>正则表达式</B>对象只包含出现<B>正则表达式</B>匹配的信息。</P>

<H4>示例</H4>

<P>下面的例子演示了全局 <B>RegExp</B> 对象的用法。</P>

<PRE><CODE>function matchDemo(){
&nbsp;&nbsp;&nbsp;var s;
&nbsp;&nbsp;&nbsp;var re = new RegExp("d(b+)(d)","ig");
&nbsp;&nbsp;&nbsp;var str = "cdbBdbsbdbdz";
&nbsp;&nbsp;&nbsp;var arr = re.exec(str);
&nbsp;&nbsp;&nbsp;s = "$1 contains: " + <span class=cfe><B>RegExp.$1</B></span> + "\n";
&nbsp;&nbsp;&nbsp;s += "$2 contains: " + <span class=cfe><B>RegExp.$2</B></span> + "\n";
&nbsp;&nbsp;&nbsp;s += "$3 contains: " + <span class=cfe><B>RegExp.$3</B></span>;
&nbsp;&nbsp;&nbsp;return(s);
}</CODE></PRE>



<H4><A NAME="jsobjregexpprop"></A>属性</H4>

<P><A HREF="jspromatches.htm">$1...$9 属性</A> | <A HREF="jsproindex.htm">index 属性</A> | <A HREF="jsproinput.htm">input 属性</A> | <A HREF="jsprolastindex.htm">lastIndex 属性</A> | <A HREF="jsprolastmatch.htm">lastMatch 属性</A> | <A HREF="jsprolastparen.htm">lastParen 属性</A> | <A HREF="jsproleftcontext.htm">leftContext 属性</A> | <A HREF="jsprorightcontext.htm" CLASS="POPUP">rightContext 属性</A></P>

<H4>方法</H4>

<P><B>RegExp</B> 对象没有方法。 </P>

<H4>要求</H4>

<P><A HREF="jsoriversioninformation.htm">版本 3</A> </P>

<H4>请参阅</H4>

<P><A HREF="jsobjregexpression.htm">正则表达式对象</A> | <A HREF="jsgrpregexpsyntax.htm">正则达式语法</A> | <A HREF="jsobjstring.htm">String 对象</A></P>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="jscopy.htm">&copy; 2000 Microsoft Corporation 版权所有。保留所有权利。使用规定。</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
