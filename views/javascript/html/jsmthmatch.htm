<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>match 方法</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>JScript&nbsp;</TD>
<TD class="bannerright" nowrap><a href="../html-vss/jsTOC.htm">语言参考</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="jsmthmatch"></A>match 方法</H1>

<P>使用<B>正则表达式</B>模式对字符串执行查找，并将包含查找的结果作为数组返回。</P>

<P><CODE>stringObj.<B>match(</B>rgExp<B>)</B> </CODE></P>

<H4>参数</H4>

<P class=dt><I>stringObj</I></P>

<P class=indent>必选项。对其进行查找的 <B>String</B> 对象或字符串文字。</P>

<P class=dt><I>rgExp</I></P>

<P class=indent>必选项。为包含正则表达式模式和可用标志的<B>正则表达式</B>对象。也可以是包含正则表达式模式和可用标志的变量名或字符串文字。</P>

<H4>说明</H4>

<P>如果 <B>match</B> 方法没有找到匹配，返回 <B>null</B>。如果找到匹配返回一个数组并且更新全局 <B>RegExp</B> 对象的属性以反映匹配结果。</P>

<P><B>match</B> 方法返回的数组有三个属性：<B>input</B>、<B>index</B>和<B>lastIndex</B>。<B>Input</B> 属性包含整个的被查找字符串。<B>Index</B> 属性包含了在整个被查找字符串中匹配的子字符串的位置。<B>LastIndex</B> 属性包含了最后一次匹配中最后一个字符的下一个位置。</P>

<P>如果没有设置全局标志 (g)，数组的0元素包含整个匹配，而第 1 到 n 元素包含了匹配中曾出现过的任一个子匹配。这相当于没有设置全局标志的 <B>exec</B> 方法。如果设置了全局标志，元素0到n中包含所有匹配。</P>

<H4>示例</H4>

<P>下面的示例演示了<B>match</B> 方法的用法：</P>

<PRE><CODE>function MatchDemo(){
&nbsp;&nbsp;&nbsp;var r, re;         // </CODE>声明变量。
&nbsp;&nbsp;&nbsp;<CODE>var s = "The rain in Spain falls mainly in the plain";</CODE>
<CODE>&nbsp;&nbsp;&nbsp;re = /ain/i;    // </CODE>创建正则表达式模式。
&nbsp;&nbsp;&nbsp;<CODE>r = <span class=cfe><B>s.match(</B></span>re<span class=cfe><B>)</B></span>;   // </CODE>尝试匹配搜索字符串。
&nbsp;&nbsp;&nbsp;<CODE>return(r);         // </CODE>返回第一次出现<CODE> "ain" </CODE>的地方。
}</PRE>

<P>本示例说明带 <B>g</B> 标志设置的 match 方法的用法。</P>

<PRE><CODE>function MatchDemo(){
&nbsp;&nbsp;&nbsp;var r, re;         // </CODE>声明变量。
&nbsp;&nbsp;&nbsp;<CODE>var s = "The rain in Spain falls mainly in the plain";</CODE>
<CODE>&nbsp;&nbsp;&nbsp;re = /ain/ig;      // </CODE>创建正则表达式模式。
&nbsp;&nbsp;&nbsp;<CODE>r = <span class=cfe><B>s.match(</B></span>re<span class=cfe><B>)</B></span>;   // </CODE>尝试去匹配搜索字符串。
&nbsp;&nbsp;&nbsp;<CODE>return(r);         // </CODE>返回的数组包含了所有<CODE> "ain" </CODE>
<CODE>                      // </CODE>出现的四个匹配。
}</PRE>

<P>下面几行代码演示了字符串文字的 <B>match</B> 方法的用法。</P>

<PRE><CODE>var r, re = "Spain";
r = <span class=cfe><B>"The rain in Spain".replace(</B></span>re<span class=cfe><B>,</B></span> "Canada"<span class=cfe><B>)</B></span>;</CODE></PRE>

<H4>要求</H4>

<P><A HREF="jsoriversioninformation.htm">版本 3</A></P>

<H4>请参阅</H4>

<P><A HREF="jsmthexec.htm">exec 方法</A> | <A HREF="jsobjregexp.htm">RegExp 对象</A> | <A HREF="jsmthreplace.htm">replace 方法</A> | <A HREF="jsmthsearch.htm">search 方法</A> | <A HREF="jsobjstring.htm#jsobjstringmeth">String 对象的方法</A> | <A HREF="jsmthtest.htm">test 方法</A></P>

<P>应用于： <A HREF="jsobjstring.htm">String 对象</A></P>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="jscopy.htm">&copy; 2000 Microsoft Corporation 版权所有。保留所有权利。使用规定。</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
