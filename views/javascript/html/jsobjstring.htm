<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>String 对象</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>JScript&nbsp;</TD>
<TD class="bannerright" nowrap><a href="../html-vss/jsTOC.htm">语言参考</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="jsobjstring"></A>String 对象</H1>

<P>可用于处理或格式化文本字符串以及确定和定位字符串中的子字符串。 </P>

<H4>语法</H4>

<P><CODE><I>newString</I> = <B>new String(</B>["s<I>tringLiteral</I>"]<B>)</B></CODE></P>

<H4>参数</H4>

<P class=dt><I>newString</I></P>

<P class=indent>必选项。要赋值为 <B>String</B> 对象的变量名。</P>

<P class=dt><I>stringLiteral</I></P>

<P class=indent>可选项。任意 Unicode 字符群。</P>

<H4>说明</H4>

<P><B>String</B> 对象可用字符串文字显式创建。用这种方法创建的 <B>String</B> 对象（指以标准字符串形式）与用 <B>new</B> 运算符创建的 <B>String</B> 对象处理上不同。所有字符串文字共享公用的全局字符串对象。如果为字符串文字添加属性，则它对所有标准字符串对象都是可用的： </P>

<PRE><CODE>var alpha, beta;
alpha = "</CODE>这是一个字符串<CODE>";</CODE>
<CODE>beta = "</CODE>这也是一个字符串<CODE>";</CODE>

<CODE>alpha.test = 10;</CODE></PRE>

<P>在前一示例中，这时为 <I>beta</I> 和所有将来的字符串定义 <I>test</I>。然而，在下面的例子中，被添加属性的处理略有不同： </P>

<PRE><CODE>var gamma, delta;
gamma = new String("</CODE>这是一个字符串<CODE>");</CODE>
<CODE>delta = new String("</CODE>这是也一个字符串<CODE>");</CODE>

<CODE>gamma.test = 10;</CODE></PRE>

<P>在这种情况下，不为 <I>delta</I> 定义 <I>test</I>。每个用 <B>new</B> <B>String</B> 声明的 <B>String</B> 对象有其自己的一组成员。这是对 <B>String</B> 对象和字符串文字的处理不同的唯一情况。 </P>



<H4><A NAME="jsobjstringprop"></A>属性</H4>

<P><A HREF="jsproconstructor.htm">constructor 属性</A> | <A HREF="jsprolengthstring.htm">length 属性</A> | <A HREF="jsproprototype.htm">prototype 属性</A></P>



<H4><A NAME="jsobjstringmeth"></A>方法</H4>

<P><A HREF="jsmthanchor.htm">anchor 方法</A> | <A HREF="jsmthbig.htm">big 方法</A> | <A HREF="jsmthblink.htm">blink 方法</A> | <A HREF="jsmthbold.htm">bold 方法</A> | <A HREF="jsmthcharat.htm">charAt 方法</A> | <A HREF="jsmthcharcodeat.htm">charCodeAt 方法</A> | <A HREF="jsmthconcatstring.htm">concat 方法</A> | <A HREF="jsmthfixed.htm">fixed 方法</A> | <A HREF="jsmthfontcolor.htm">fontcolor 方法</A> | <A HREF="jsmthfontsize.htm">fontsize 方法</A> | <A HREF="jsmthfromcharcode.htm">fromCharCode 方法</A> | <A HREF="jsmthindexof.htm">indexOf 方法</A> | <A HREF="jsmthitalics.htm">italics 方法</A> | <A HREF="jsmthlastindexof.htm">lastIndexOf 方法</A> | <A HREF="jsmthlink.htm">link 方法</A> | <A HREF="jsmthmatch.htm">match 方法</A> | <A HREF="jsmthreplace.htm">replace 方法</A> | <A HREF="jsmthsearch.htm">search 方法</A> | <A HREF="jsmthslicestring.htm">slice 方法</A> | <A HREF="jsmthsmall.htm">small 方法</A> | <A HREF="jsmthsplit.htm">split 方法</A> | <A HREF="jsmthstrike.htm">strike 方法</A> | <A HREF="jsmthsub.htm">sub 方法</A> | <A HREF="jsmthsubstr.htm">substr 方法</A> | <A HREF="jsmthsubstring.htm">substring 方法</A> | <A HREF="jsmthsup.htm">sup 方法</A> | <A HREF="jsmthtolowercase.htm">toLowerCase 方法</A> | <A HREF="jsmthtouppercase.htm">toUpperCase 方法</A> | <A HREF="jsmthtostring.htm">toString 方法</A> | <A HREF="jsmthvalueof.htm">valueOf 方法</A></P>

<H4>要求</H4>

<P><A HREF="jsoriversioninformation.htm">版本 1</A></P>

<H4>请参阅</H4>

<P><A HREF="jsoprnew.htm">new 运算符</A></P>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="jscopy.htm">&copy; 2000 Microsoft Corporation 版权所有。保留所有权利。使用规定。</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
