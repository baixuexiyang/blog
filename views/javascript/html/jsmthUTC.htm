<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>UTC 方法</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>JScript&nbsp;</TD>
<TD class="bannerright" nowrap><a href="../html-vss/jsTOC.htm">语言参考</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="jsmthutc"></A>UTC 方法</H1>

<P>返回<A HREF="glossary.htm#defutctime">全球标准时间 (UTC)</A> (或 GMT) 的 1970 年 1 月 1 日到所指定日期之间所间隔的毫秒数。</P>

<P><CODE><B>Date.UTC(</B><I>year</I>, <I>month</I>, <I>day</I>[<B>,</B> <I>hours</I>[<B>,</B> <I>minutes</I>[<B>,</B> <I>seconds</I>[<B>,</B><I>ms</I>]]]]<B>)</B></CODE></P>

<H4>参数</H4>

<P class=dt>year</P>

<P class=indent>必选项。为了获得跨世纪日期处理的精确性，需要使用完整的年份表示法。如果 <I>year</I> 处于 0 到 99 之间，那么 <I>year</I> 就被假定为 1900 + <I>year</I>。</P>

<P class=dt>month</P>

<P class=indent>必选项。月份是一个处于 0 到 11 之间的整数 (一月到十二月)。</P>

<P class=dt>day</P>

<P class=indent>必选项。日期是一个处于 1 到 31 之间的整数。</P>

<P class=dt>hours</P>

<P class=indent>可选项。如果提供了 <I>minutes</I>，那么此项也必须提供。0 到 23 之间的一个整数 (午夜到 11pm)，用来指定小时。</P>

<P class=dt>minutes</P>

<P class=indent>可选的，如果提供了 <I>seconds</I>，那么此项也必须提供。 0 到 59 之间的一个整数，用来指定分钟值。</P>

<P class=dt>seconds</P>

<P class=indent>可选项。如果提供了 <I>milliseconds</I>，那么此项也必须提供。从 0 到 59 之间的一个整数，用来指定秒钟值。</P>

<P class=dt>ms</P>

<P class=indent>可选项。从 0 到 999 之间的一个整数，用来指定毫秒数。</P>

<H4>说明</H4>

<P><B>UTC</B> 方法返回从 UTC 的 1970 年 1 月 1 日午夜到所指定日期之间的毫秒数。这个返回值可以用在 <B>setTime</B> 方法中和 <B>Date</B> 对象的<A HREF="glossary.htm#defconstructor">构造函数</A>中。如果一个参数的值超出其范围或者是一个负数，那么其他保存过的值将相应地得到改变。例如，如果使用者指定 150 秒，JScript 会将该数值重新定义为 2 分钟 30 秒。 </P>

<P><B>UTC</B> 方法和 <B>Date</B> 对象的接受日期值的构造函数之间的差别在于： <B>UTC</B> 方法假设 UTC，而 <B>Date</B> 对象的构造函数假定<A HREF="glossary.htm#deflocaltime">本地时间</A>。 </P>

<P><B>UTC</B> 方法是一个静态方法。因此，<B>Date</B> 对象不一定要在创建完之后才可以使用。</P>

<P class=atl><B><B>注意</B></B>&nbsp;&nbsp;&nbsp;如果 <I>year</I> 处于 0 到 99 之间，年份为 <I>1900 + year</I> 。</p>
<H4>示例</H4>

<P>下面这个例子说明了 <B>UTC</B> 方法的用法： </P>

<PRE><CODE>function DaysBetweenDateAndNow(yr, mo, dy){
&nbsp;&nbsp;&nbsp;var d, r, t1, t2, t3;            // </CODE>声明变量。
&nbsp;&nbsp;&nbsp;<CODE>var MinMilli = 1000 * 60         // </CODE>初始化变量。
&nbsp;&nbsp;&nbsp;<CODE>var HrMilli = MinMilli * 60</CODE>
<CODE>&nbsp;&nbsp;&nbsp;var DyMilli = HrMilli * 24</CODE>
<CODE>&nbsp;&nbsp;&nbsp;t1 = <span class=cfe><B>Date.UTC(</B></span>yr<span class=cfe><B>,</B></span> mo - 1<span class=cfe><B>,</B></span> dy<span class=cfe><B>)</B></span>    // </CODE>获取从<CODE> 1/1/1970 </CODE>开始的毫秒数。
&nbsp;&nbsp;&nbsp;<CODE>d = new Date();                  // </CODE>创建<CODE> Date </CODE>对象。
&nbsp;&nbsp;&nbsp;<CODE>t2 = d.getTime();                // </CODE>获取当前时间。
&nbsp;&nbsp;&nbsp;<CODE>if (t2 &gt;= t1) </CODE>
<CODE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t3 = t2 - t1;</CODE>
<CODE>&nbsp;&nbsp;&nbsp;else</CODE>
<CODE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t3 = t1 - t2;</CODE>
<CODE>&nbsp;&nbsp;&nbsp;r = Math.round(t3 / DyMilli);</CODE>
&nbsp;&nbsp;&nbsp;<CODE>return(r);                       // </CODE>返回差。
}</PRE>

<H4>要求</H4>

<P><A HREF="jsoriversioninformation.htm">版本 1</A></P>

<H4>请参阅</H4>

<P><A HREF="jsobjdate.htm#jsobjdatemeth">Date 对象的方法</A> | <A HREF="jsmthsettime.htm">setTime 方法</A></P>

<P>应用于： <A HREF="jsobjdate.htm">Date 对象</A></P>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="jscopy.htm">&copy; 2000 Microsoft Corporation 版权所有。保留所有权利。使用规定。</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
