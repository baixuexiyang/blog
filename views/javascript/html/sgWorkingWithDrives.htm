<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>处理驱动器和文件夹</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>JScript&nbsp;</TD>
<TD class="bannerright" nowrap><a href="../html-vss/jsTOC.htm">语言参考</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="sgworkingwithdrives"></A>处理驱动器和文件夹</H1>

<P>使用 <B>FileSystemObject</B> (FSO) 对象模式，可以有计划地处理驱动器和文件夹，就像在 Windows 资源管理器中交互式地处理它们一样。可以复制和移动文件夹，获取有关驱动器和文件夹的信息，等等。</P>

<H2>获取有关驱动器的信息</H2>

<P>可以用 <B>Drive</B> 对象来获得有关各种驱动器的信息，这些驱动器是实物地或通过网络连接到系统上的。它的属性可以用来获得下面的信息内容：

<UL type=disc>
	<LI>驱动器的总容量，以字节为单位（<B>TotalSize</B> 属性） </li>

	<LI>驱动器的可用空间是多少，以字节为单位（<B>AvailableSpace</B> 或 <B>FreeSpace</B> 属性） </li>

	<LI>哪个号被赋给了该驱动器（<B>DriveLetter</B> 属性） </li>

	<LI>驱动器的类型是什么，如可移动的、固定的、网络的、CD-ROM 或 RAM 磁盘（<B>DriveType</B> 属性） </li>

	<LI>驱动器的序列号（SerialNumber 属性） </li>

	<LI>驱动器使用的文件系统类型，如 FAT、FAT32、NTFS 等等（<B>FileSystem</B> 属性） </li>

	<LI>驱动器是否可以使用（<B>IsReady</B> 属性） </li>

	<LI>共享和/或卷的名字（ShareName 和 VolumeName 属性） </li>

	<LI>驱动器的路径或根文件夹（<B>Path</B> 和 <B>RootFolder</B> 属性） </li>
</UL>

<P>请考察&nbsp;&nbsp;<A HREF="sgfsosample.htm#driveinfo">示例代码</A>，来领会如何在 <B>FileSystemObject</B> 中使用这些属性。</P>

<H4>Drive 对象的用法示例</H4>

<P>使用 <B>Drive</B> 对象来收集有关驱动器的信息。在下面的代码中，没有对实际的 <B>Drive</B> 对象的引用；相反，使用 <B>GetDrive</B> 方法来获得现有 <B>Drive</B> 对象的引用（在这个例子中就是 drv）。</P>

<P>下面示例示范了如何在 VBScript 中使用 <B>Drive</B> 对象： </P>

<PRE><CODE>Sub ShowDriveInfo(drvPath)
</CODE>&nbsp;&nbsp;&nbsp;<CODE>Dim fso, drv, s</CODE>
<CODE>&nbsp;&nbsp;&nbsp;Set fso = CreateObject("Scripting.FileSystemObject")</CODE>
<CODE>&nbsp;&nbsp;&nbsp;Set drv = fso.GetDrive(fso.GetDriveName(drvPath))</CODE>
<CODE>&nbsp;&nbsp;&nbsp;s = "Drive " &amp; UCase(drvPath) &amp; " - "</CODE>
<CODE>&nbsp;&nbsp;&nbsp;s = s &amp; drv.VolumeName &amp; "&lt;br&gt;"</CODE>
<CODE>&nbsp;&nbsp;&nbsp;s = s &amp; "Total Space: " &amp; FormatNumber(drv.TotalSize / 1024, 0)</CODE>
<CODE>&nbsp;&nbsp;&nbsp;s = s &amp; " Kb" &amp; "&lt;br&gt;"</CODE>
<CODE>&nbsp;&nbsp;&nbsp;s = s &amp; "Free Space: " &amp; FormatNumber(drv.FreeSpace / 1024, 0)</CODE>
<CODE>&nbsp;&nbsp;&nbsp;s = s &amp; " Kb" &amp; "&lt;br&gt;"</CODE>
<CODE>&nbsp;&nbsp;&nbsp;Response.Write s</CODE>
<CODE>End Sub</CODE></PRE>

<P>下面的代码说明在 JScript 中实现同样的功能： </P>

<PRE><CODE>function ShowDriveInfo1(drvPath)
{
</CODE>&nbsp;&nbsp;&nbsp;<CODE>var fso, drv, s ="";</CODE>
<CODE>&nbsp;&nbsp;&nbsp;fso = new ActiveXObject("Scripting.FileSystemObject");</CODE>
<CODE>&nbsp;&nbsp;&nbsp;drv = fso.GetDrive(fso.GetDriveName(drvPath));</CODE>
<CODE>&nbsp;&nbsp;&nbsp;s += "Drive " + drvPath.toUpperCase()+ " - ";</CODE>
<CODE>&nbsp;&nbsp;&nbsp;s += drv.VolumeName + "&lt;br&gt;";</CODE>
<CODE>&nbsp;&nbsp;&nbsp;s += "Total Space: " + drv.TotalSize / 1024;</CODE>
<CODE>&nbsp;&nbsp;&nbsp;s += " Kb" + "&lt;br&gt;"; </CODE>
<CODE>&nbsp;&nbsp;&nbsp;s += "Free Space: " + drv.FreeSpace / 1024;</CODE>
<CODE>&nbsp;&nbsp;&nbsp;s += " Kb" + "&lt;br&gt;";</CODE>
<CODE>&nbsp;&nbsp;&nbsp;Response.Write(s);</CODE>
}</PRE>

<H2>处理文件夹</H2>

<P>在下面的表中，描述了普通的文件夹任务和执行它们的方法。 </P>

<TABLE border=1 cellspacing=0 cols=2 frame=box rules=all>

<TR VALIGN="top">
<TH width=39%>任务</TH>
<TH width=61%>方法</TH>
</TR>

<TR VALIGN="top">
<TD width=39%>创建文件夹。</TD>
<TD width=61%>FileSystemObject.CreateFolder</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>删除文件夹。</TD>
<TD width=61%>Folder.Delete 或 FileSystemObject.DeleteFolder</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>移动文件夹。</TD>
<TD width=61%>Folder.Move 或 FileSystemObject.MoveFolder</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>复制文件夹。</TD>
<TD width=61%>Folder.Copy 或 FileSystemObject.CopyFolder</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>检索文件夹的名字。</TD>
<TD width=61%>Folder.Name</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>如果文件夹在驱动器上存在，则找出它。</TD>
<TD width=61%>FileSystemObject.FolderExists</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>获得现有 <B>Folder</B> 对象的实例。</TD>
<TD width=61%>FileSystemObject.GetFolder</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>找出文件夹的父文件夹名。</TD>
<TD width=61%>FileSystemObject.GetParentFolderName</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>找出系统文件夹的路径。</TD>
<TD width=61%>FileSystemObject.GetSpecialFolder</TD>
</TR>
</TABLE><BR>

<P>请考察<A HREF="sgfsosample.htm#folderinfo">示例代码</A>，来看看在 <B>FileSystemObject</B> 中使用了多少种这些的方法和属性。</P>

<P>下面的示例示范了如何在 VBScript 中使用 <B>Folder</B> 和 <B>FileSystemObject</B> 对象，来操作文件夹和获得有关它们的信息：</P>

<PRE><CODE>Sub ShowFolderInfo()
</CODE>&nbsp;&nbsp;&nbsp;<CODE>Dim fso, fldr, s</CODE>
&nbsp;&nbsp;&nbsp;<CODE>' </CODE>获得<CODE> FileSystemObject </CODE>的实例。
&nbsp;&nbsp;&nbsp;<CODE>Set fso = CreateObject("Scripting.FileSystemObject")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>' </CODE>获得<CODE> Drive </CODE>对象。
&nbsp;&nbsp;&nbsp;<CODE>Set fldr = fso.GetFolder("c:")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>' </CODE>打印父文件夹名字。
&nbsp;&nbsp;&nbsp;<CODE>Response.Write "Parent folder name is: " &amp; fldr &amp; "&lt;br&gt;"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>' </CODE>打印驱动器名字。
&nbsp;&nbsp;&nbsp;<CODE>Response.Write "Contained on drive " &amp; fldr.Drive &amp; "&lt;br&gt;"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>' </CODE>打印根文件名。
&nbsp;&nbsp;&nbsp;<CODE>If fldr.IsRootFolder = True Then</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Response.Write "This is the root folder." &amp; ""&lt;br&gt;"&lt;br&gt;"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Else</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Response.Write "This folder isn't a root folder." &amp; "&lt;br&gt;&lt;br&gt;" </CODE>
&nbsp;&nbsp;&nbsp;<CODE>End If</CODE>
&nbsp;&nbsp;&nbsp;<CODE>' </CODE>用<CODE> FileSystemObject </CODE>对象创建新的文件夹。
&nbsp;&nbsp;&nbsp;<CODE>fso.CreateFolder ("C:\Bogus")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Response.Write "Created folder C:\Bogus" &amp; "&lt;br&gt;"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>' </CODE>打印文件夹的基本名字。
&nbsp;&nbsp;&nbsp;<CODE>Response.Write "Basename = " &amp; fso.GetBaseName("c:\bogus") &amp; "&lt;br&gt;"</CODE>
&nbsp;&nbsp;&nbsp;<CODE>' </CODE>删除新创建的文件夹。
&nbsp;&nbsp;&nbsp;<CODE>fso.DeleteFolder ("C:\Bogus")</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Response.Write "Deleted folder C:\Bogus" &amp; "&lt;br&gt;"</CODE>
<CODE>End Sub</CODE></PRE>

<P>下面的示例显示如何在 JScript 中使用 <B>Folder</B> 和 <B>FileSystemObject</B> 对象： </P>

<PRE><CODE>function ShowFolderInfo()
{
</CODE>&nbsp;&nbsp;&nbsp;<CODE>var fso, fldr, s = "";</CODE>
&nbsp;&nbsp;&nbsp;<CODE>// </CODE>获得<CODE> FileSystemObject </CODE>的实例。
&nbsp;&nbsp;&nbsp;<CODE>fso = new ActiveXObject("Scripting.FileSystemObject");</CODE>
&nbsp;&nbsp;&nbsp;<CODE>// </CODE>获得<CODE> Drive </CODE>对象。
&nbsp;&nbsp;&nbsp;<CODE>fldr = fso.GetFolder("c:");</CODE>
&nbsp;&nbsp;&nbsp;<CODE>// </CODE>打印父文件夹名。
&nbsp;&nbsp;&nbsp;<CODE>Response.Write("Parent folder name is: " + fldr + "&lt;br&gt;");</CODE>
&nbsp;&nbsp;&nbsp;<CODE>// </CODE>打印驱动器名字。
&nbsp;&nbsp;&nbsp;<CODE>Response.Write("Contained on drive " + fldr.Drive + "&lt;br&gt;");</CODE>
&nbsp;&nbsp;&nbsp;<CODE>// </CODE>打印根文件名。
&nbsp;&nbsp;&nbsp;<CODE>if (fldr.IsRootFolder)</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Response.Write("This is the root folder.");</CODE>
&nbsp;&nbsp;&nbsp;<CODE>else</CODE>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<CODE>Response.Write("This folder isn't a root folder.");</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Response.Write("&lt;br&gt;&lt;br&gt;");</CODE>
&nbsp;&nbsp;&nbsp;<CODE>// </CODE>用<CODE> FileSystemObject </CODE>对象创建新的文件夹。
&nbsp;&nbsp;&nbsp;<CODE>fso.CreateFolder ("C:\\Bogus");</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Response.Write("Created folder C:\\Bogus" + "&lt;br&gt;");</CODE>
&nbsp;&nbsp;&nbsp;<CODE>// </CODE>打印文件夹的基本名。
&nbsp;&nbsp;&nbsp;<CODE>Response.Write("Basename = " + fso.GetBaseName("c:\\bogus") + "&lt;br&gt;");</CODE>
&nbsp;&nbsp;&nbsp;<CODE>// </CODE>删除新创建的文件夹。
&nbsp;&nbsp;&nbsp;<CODE>fso.DeleteFolder ("C:\\Bogus");</CODE>
&nbsp;&nbsp;&nbsp;<CODE>Response.Write("Deleted folder C:\\Bogus" + "&lt;br&gt;");</CODE>
}</PRE>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="jscopy.htm">&copy; 2000 Microsoft Corporation 版权所有。保留所有权利。使用规定。</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
