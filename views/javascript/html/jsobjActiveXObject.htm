<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>ActiveXObject 对象</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>JScript&nbsp;</TD>
<TD class="bannerright" nowrap><a href="../html-vss/jsTOC.htm">语言参考</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="jsobjactivexobject"></A>ActiveXObject 对象</H1>

<P>启用并返回 <A HREF="glossary.htm#defautomationobject">Automation 对象</A>的引用。</P>

<P><CODE><I>newObj</I> = <B>new</B> <B>ActiveXObject(</B><I>servername.typename</I>[<B>,</B> <I>location</I>]<B>)</B></CODE></P>

<P>ActiveXObject 对象语法有这些部分：</P>

<H4>参数</H4>

<P class=dt><I>newObj</I></P>

<P class=indent>必选项。要赋值为 <B>ActiveXObject</B> 的变量名。</P>

<P class=dt><I>servername</I></P>

<P class=indent>必选项。提供该对象的应用程序的名称。</P>

<P class=dt><I>typename</I></P>

<P class=indent>必选项。要创建的对象的类型或类。</P>

<P class=dt><I>location</I></P>

<P class=indent>可选项。创建该对象的网络服务器的名称。</P>

<H4>说明</H4>

<P>Automation 服务器至少提供一类对象。例如，字处理应用程序可能提供应用程序对象、文档对象和工具栏对象。</P>

<P>要创建 Automation 对象，将新的 <B>ActiveXObject</B> 赋给对象变量： </P>

<PRE><CODE>var ExcelSheet;
ExcelApp = new <span class=cfe><B>ActiveXObject</B></span>("Excel.Application");
ExcelSheet = new <span class=cfe><B>ActiveXObject(</B></span>"Excel<span class=cfe><B>.</B></span>Sheet"<span class=cfe><B>)</B></span>;</CODE></PRE>

<P>本代码启动创建对象的应用程序（在这种情况下，Microsoft Excel 工作表）。一旦对象被创建，就可以用定义的对象变量在代码中引用它。 在下面的例子中，通过对象变量 ExcelSheet 访问新对象的属性和方法和其他 Excel 对象，包括 Application 对象和 ActiveSheet.Cells 集合。 </P>

<PRE><CODE>// </CODE>使<CODE> Excel </CODE>通过<CODE> Application </CODE>对象可见。
<CODE>ExcelSheet.Application.Visible = true;</CODE>
<CODE>// </CODE>将一些文本放置到表格的第一格中。
<CODE>ExcelSheet.ActiveSheet.Cells(1,1).Value = "This is column A, row 1";</CODE>
<CODE>// </CODE>保存表格。
<CODE>ExcelSheet.SaveAs("C:\\TEST.XLS");</CODE>
<CODE>// </CODE>用<CODE> Application </CODE>对象用<CODE> Quit </CODE>方法关闭<CODE> Excel</CODE>。
<CODE>ExcelSheet.Application.Quit();</CODE></PRE>

<P>只有当 Internet 安全性关闭时才能完成在远程服务器中创建对象。要在远程网络计算机创建对象，可以将该计算机的名称传递给 <B>ActiveXObject</B> 的 <I>servername</I> 参数。该名称与共享名的机器名部分相同。比如共享名为 "\\myserver\public" 的网络，<I>servername</I> 是 "myserver"。另外，可以用 DNS 格式或 IP 地址指定 <I>servername</I>。</P>

<P>下面的代码返回在名为 "myserver" 的远程网络计算机上运行的 Excel 实例的版本号：</P>

<PRE><CODE>function GetAppVersion() {
&nbsp;&nbsp;&nbsp;var XLApp = new <span class=cfe><B>ActiveXObject(</B></span>"Excel<span class=cfe><B>.</B></span>Application"<span class=cfe><B>,</B></span> "MyServer"<span class=cfe><B>)</B></span>;
&nbsp;&nbsp;&nbsp;return(XLApp.Version);
</CODE>}</PRE>

<P>如果指定的远程服务器不存在或找不到时将发生错误。 </P>

<H4>要求</H4>

<P><A HREF="jsoriversioninformation.htm">版本 1</A>  </P>

<H4>请参阅</H4>

<P><A HREF="jsfctgetobject.htm">GetObject 函数</A></P>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="jscopy.htm">&copy; 2000 Microsoft Corporation 版权所有。保留所有权利。使用规定。</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
