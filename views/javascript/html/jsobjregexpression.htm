<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>正则表达式对象</TITLE>
<!--CSS_START-->
<style>@import url(../html-vss/msdnie4a.css);</style>
<link disabled rel="stylesheet" href="../html-vss/msdn_ie3.css">
<!--CSS_END-->
</HEAD>
<BODY>


<!--Start Head-->
<TABLE class="banner" width="100%" CELLSPACING=0>
<TR>
<TD class="bannerleft" nowrap>JScript&nbsp;</TD>
<TD class="bannerright" nowrap><a href="../html-vss/jsTOC.htm">语言参考</a></TD>
</TR>
</TABLE>
<HR>
<!--End Head-->

<H1><A NAME="jsobjregexpression"></A>正则表达式对象</H1>

<P>本对象包含正则表达式模式以及表明如何应用模式的标志。</P>

<H4>语法 1</H4>

<P><CODE>re = <B>/</B><I>pattern</I><B>/</B>[<I>flags</I>]</CODE></P>

<H4>语法 2</H4>

<P><CODE>re = <B>new RegExp("</B><I>pattern</I><B>",</B>[<B>"</B><I>flags</I><B>"</B>]<B>)</B> </CODE></P>

<H4>参数</H4>

<P class=dt><I>re</I></P>

<P class=indent>必选项。将要赋值为正则表达式模式的变量名。</P>

<P class=dt><I>Pattern </I></P>

<P class=indent>必选项。要使用的正则表达式模式。如果使用语法 1，用 "/" 字符分隔模式。如果用语法 2，用引号将模式引起来。</P>

<P class=dt><I>flags</I></P>

<P class=indent>可选项。如果使用语法 2 要用引号将 flag 引起来。标志可以组合使用，可用的有：

<UL type=disc>
	<LI>g （全文查找出现的所有 <I>pattern</I>）</li>

	<LI>i （忽略大小写）</li>

	<LI>m （多行查找）</li>
</UL>

<H4>说明</H4>

<P>不要将<B>正则表达式</B>对象跟全局 <B>RegExp</B> 对象混淆。尽管听起来像是一回事，但它们是截然不同的。<B>正则表达式</B>对象的属性只包含一个<B>正则表达式</B>的信息，而全局 <B>RegExp</B> 对象的属性包含了不断更新的每一个匹配出现的信息。</P>

<P><B>正则表达式</B>对象保存用于查找字符串中的字符组合时的模式。创建<B>正则表达式</B>对象后，或者它被传递给字符串方法，或者字符串被传递给一个正则表达式方法。有关最近进行查找的信息被保存在全局 <B>RegExp</B> 对象中。</P>

<P>当预先知道查找字符串时用语法 1。当查找字符串经常变动或不知道时用语法 2，比如由用户输入得到的字符串。</P>

<P>在使用前 <I>pattern</I> 参数被编译为内部格式。对语法 1 来说，<I>pattern</I> 在该脚本被装载时被编译。对语法 2 来说，<I>pattern</I> 在使用前，或调用 <B>compile</B> 方法时被编译。 </P>

<H4>示例</H4>

<P>下面的示例创建一个包含正则表达式模式及相关标志的对象(re)，向您演示<B>正则表达式</B>对象的用法。在本例中，作为结果的<B>正则表达式</B>对象又用于 <B>match</B> 方法中：</P>

<PRE><CODE>function MatchDemo(){
&nbsp;&nbsp;&nbsp;var r, re;                     // </CODE>声明变量。
&nbsp;&nbsp;&nbsp;<CODE>var s = "The rain in Spain falls mainly in the plain";</CODE>
<CODE>&nbsp;&nbsp;&nbsp;<span class=cfe><B>re = new RegExp("Spain","i")</B></span>;  // </CODE>创建正则表达式对象。
&nbsp;&nbsp;&nbsp;<CODE>r = <span class=cfe>s.match(</span><B>re</B><span class=cfe>)</span>;               // </CODE>在字符串<CODE> s </CODE>中查找匹配。
&nbsp;&nbsp;&nbsp;<CODE>return(r);                     // </CODE>返回匹配结果。
}</PRE>



<H4><A NAME="jsobjregexpressionprop"></A>属性</H4>

<P><A HREF="jsprolastindex.htm">lastIndex 属性</A> | <A HREF="jsprosource.htm">source 属性</A></P>



<H4><A NAME="jsobjregexpressionmeth"></A>方法</H4>

<P><A HREF="jsmthcompile.htm">compile 方法</A> | <A HREF="jsmthexec.htm">exec 方法</A> | <U>test 方法</U></P>

<H4>要求</H4>

<P><A HREF="jsoriversioninformation.htm">版本 3</A></P>

<H4>请参阅</H4>

<P><A HREF="jsobjregexp.htm">RegExp 对象</A> | <A HREF="jsgrpregexpsyntax.htm">正则表达式语法</A> | <A HREF="jsobjstring.htm">String 对象</A></P>
<!--Copyright_START-->
<DIV CLASS="footer">
<HR><a href="jscopy.htm">&copy; 2000 Microsoft Corporation 版权所有。保留所有权利。使用规定。</a><br>
</DIV> <!--Copyright_END-->

</BODY>
</HTML>
